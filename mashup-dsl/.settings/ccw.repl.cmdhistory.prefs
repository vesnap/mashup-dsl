cmdhistory=[";; Switching to mashup-dsl.datamodel namespace" "(run-server routes)" ";; Switching to mashup-dsl.templating namespace" "(get-events2 (z/xml-zip (xml/parse \\"http\://api.eventful.com/rest/events/search?app_key\=4H4Vff4PdrTGp3vV&keywords\=music&location\=Belgrade&date\=Future\\")))" "(events-for-mashup)" "(vector (-> data-url parse (get-events \:title \:start_time [\:performers \:performer \:name] \:stop_time) ))" "(into {} (-> data-url parse (get-events \:title \:start_time [\:performers \:performer \:name] \:stop_time) ))" "(-> data-url parse (get-events \:title \:start_time [\:performers \:performer \:name] \:stop_time) )" "(into {} \#(vector (-> data-url parse (get-events \:title \:start_time [\:performers \:performer \:name] \:stop_time) )))" "(into {} (vector (-> data-url parse (get-events \:title \:start_time [\:performers \:performer \:name] \:stop_time) ))\\n      )" "(vector (-> data-url parse (get-events \:title \:start_time [\:performers \:performer \:name] \:stop_time) ))" "(map \#(zipmap (map create-tag tags) %) (get-events (parse data-url) \:title \:start_time [\:performers \:performer \:name] \:stop_time))" "(events-for-mashup)" "(conj *map-for-mashups* \\"Events Mashup\\" (xx))" "(def ^\:dynamic *map-for-mashups* {\:title \:content})" "(conj *map-for-mashups* \\"Events Mashup\\" (xx))" "(conj {\:title \:content} \\"Events Mashup\\" (xx))" "(events-for-mashup)" "(into {} [\:title \\"Events Mashup\\",\:contents (xx)])" "(xx)" "(into {} (xx))" "(events-for-mashup2)" "(defn events-for-mashup2 []\\r\\n  (let [title \\"Events mashup\\" event-data (vector (create-map-of-events event-map ))]\\r\\n    (apply struct event-map title event-data)))" "(events-for-mashup2)" "(map \#(into {} (\:title %1 \:contents %2)) \\"events mashup\\" (xx))" "(map \#(into {} (\:title %1 \:contents %2)) [\\"events mashup\\" (xx)])" "(into [] (\\"jkf\\" \\"fnjkf\\"))" "(into [] '(\\"jkf\\" \\"fnjkf\\"))" "(map \#(into {} (\:title %1 \:contents %2)) '(\\"events mashup\\" (xx)))" "(map \#(into {} (\:title %1 \:contents %2)) '(\\"events mashup\\" {{\:1 \\"1\\" \:2 \\"2\\"} {\:3 \\"3\\" \:4 \\"4\\"}}))" "(map \#(into {} (\:title %1 \:contents %2)) '(\\"events mashup\\" [{\:1 \\"1\\" \:2 \\"2\\"} {\:3 \\"3\\" \:4 \\"4\\"}]))" "(map \#(into {} (\:title %1 \:contents %2)) \\"events mashup\\" [{\:1 \\"1\\" \:2 \\"2\\"} {\:3 \\"3\\" \:4 \\"4\\"}])" "(map \#(into {} (\:title first % \:contents second %)) '(\\"events mashup\\" {{\:1 \\"1\\" \:2 \\"2\\"} {\:3 \\"3\\" \:4 \\"4\\"}}))" "(vector (xx))" "(map {\:title \:content} {\\"Events mashup\\" (xx)})" "(map {} {\:title \:content} {\\"Events mashup\\" (xx)})" "(events-for-mashup)" "(defn events-for-mashup []\\r\\n  (let [title \\"Events mashup\\" \\r\\n        event-data (xx)]\\r\\n    (( (map {} {\:title \:content} {\\"Events mashup\\" (xx)})))))" "(events-for-mashup)" "(defn proba[] (map {} {\:title \:content} {\\"Events mashup\\" (xx)}))" "(proba)" "(map {} {%1 %2} {\\"Events mashup\\" (xx)})" "(map {} {% %} {\\"Events mashup\\" (xx)})" "(defmacro data-for-mashup [mashup-name func] `(map {} {\:title \:content} {~mashup-name ~@func}))" "(macroexpand-1 data-for-mashup \\"events\\" xx)" "(data-for-mashup \\"events\\" xx)" "(macroexpand-1 (data-for-mashup \\"events\\" xx))" "(map {} {\:title \:content} {\\"Events mashup\\" (xx)})" "(proba)" "(macroexpand-1 (data-for-mashup \\"events\\" xx))" "(macroexpand-1 '(data-for-mashup \\"events\\" xx))" "(macroexpand-1 `(data-for-mashup \\"events\\" xx))" "(macroexpand-1 '(data-for-mashup \\"events\\" (xx)))" "(macroexpand-1 '(data-for-mashup \\"events\\" xx))" "(macroexpand-1 '(data-for-mashup \\"events\\" (xx)))" "(data-for-mashup \\"events\\" (xx))" "(data-for-mashup \\"events\\" xx)" "(data-for-mashup \\"events\\" (xx))" "(macroexpand-1 '(data-for-mashup \\"events\\" (xx)))" "(macroexpand-1 `(data-for-mashup \\"events\\" (xx)))" "(data-for-mashup \\"events\\" (xx))" "(macroexpand-1 `(data-for-mashup \\"events\\" (xx)))" "(macroexpand-1 `(data-for-mashup \\"events\\" `(xx)))" "(macroexpand-1 `(data-for-mashup \\"events\\" ~@(xx)))" "(macroexpand-1 `(data-for-mashup \\"events\\" (xx)))" "(data-for-mashup \\"events\\" xx)" "(data-for-mashup \\"events\\" (xx))" "(data-for-mashup \\"events\\" xx)" "(defn data-for-mashup-stack [mashup-name val] (zipmap [\:title \:content] [mashup-name val]))" "(data-for-mashup-stack \\"events mashup\\" (xx))" "(data-for-mashup-stack \\"events mashup\\" (vec(xx)))" "(defn data-for-mashup-stack [mashup-name val] (zipmap [\:title \:content] [mashup-name (vec val)]))" "(data-for-mashup-stack \\"events mashup\\" (xx))" "(indeks table-template \\"events mashup\\" (data-for-mashup-stack \\"events mashup\\" (xx)))" "(indeks \\"events mashup\\" (data-for-mashup-stack \\"events mashup\\" (xx)))"]
eclipse.preferences.version=1
